{"version":3,"sources":["../src/controllers/TransferTime.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,gDAAgD;AAEhD,+BAA+B;AAC/B,yDAAsD;AAEtD,IAAiB,sBAAsB,CAgDtC;AAhDD,WAAiB,sBAAsB;IACrC,6BAA0C,GAAY,EAAE,GAAa;;YACnE,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACf,2BAA2B;YAC3B,MAAM,aAAa,GAAG,MAAM,2BAAY,CAAC,IAAI,EAAE,CAAC;YAChD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;YAC3B,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC1B,CAAC;KAAA;IANqB,0CAAmB,sBAMxC,CAAA;IAED,6BAA0C,GAAY,EAAE,GAAa;;YACnE,MAAM,GAAG,GAAG,wBAAwB,CAAC;YACrC,MAAM,GAAG,GAAG,KAAK,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC;YACpC,MAAM,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;YAExC,iCAAiC;YACjC,6BAA6B;YAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACzB,MAAM,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACvC,MAAM,GAAG,GAAG,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACnC,MAAM,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YACtB,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YACzB,OAAO,CAAC,GAAG,CAAC,WAAW,GAAG,OAAO,CAAC,CAAC;YACnC,OAAO,CAAC,GAAG,CAAC,OAAO,GAAG,GAAG,CAAC,CAAC;YAC3B,OAAO,CAAC,GAAG,CAAC,SAAS,GAAG,KAAK,CAAC,CAAC;YAC/B,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;YAEzB,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YACzB,GAAG,CAAC,OAAO,CAAC,OAAO,EAAE,GAAG,GAAG,GAAG,GAAG,KAAK,CAAC,CAAC;YACxC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;KAAA;IApBqB,0CAAmB,sBAoBxC,CAAA;IAED,0BAAuC,GAAY,EAAE,GAAa;;YAChE,MAAM,aAAa,GAAG,MAAM,2BAAY,CAAC,IAAI,EAAE,CAAC;YAEhD,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACjB,OAAO,CAAC,OAAO,CAAC,kBAAkB,EAAE,UAAS,GAAG,EAAE,IAAI;gBACpD,IAAI,CAAC,aAAa,CAAC,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE;oBAC7B,MAAM,CAAC,GAAG,eAAe,CAAC;oBAE1B,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,EAAC,OAAO,EAAE,KAAK,EAAC,CAAC,CAAC;oBACpC,kDAAkD;oBAClD,EAAE,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;oBAC7D,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC,CAAC;gBAC5C,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YAEH,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjB,CAAC;KAAA;IAhBqB,uCAAgB,mBAgBrC,CAAA;AACH,CAAC,EAhDgB,sBAAsB,GAAtB,8BAAsB,KAAtB,8BAAsB,QAgDtC","file":"TransferTime.js","sourcesContent":["import * as amqplib from 'amqplib/callback_api';\nimport { Request, Response } from 'express';\nimport * as redis from 'redis';\nimport { transferTime } from '../models/TransferTime';\n\nexport namespace TransferTimeController {\n  export async function getAllTransferTimes(req: Request, res: Response): Promise<void> {\n    console.log(2);\n    // const transferTimes = 2;\n    const transferTimes = await transferTime.find();\n    console.log(transferTimes);\n    res.json(transferTimes);\n  }\n\n  export async function publishMessageRedis(req: Request, res: Response): Promise<void> {\n    const url = 'redis://127.0.0.1:6379';\n    const pub = redis.createClient(url);\n    const data = req.params.data.split('=');\n\n    // [transfertime:cala.vinas, 123]\n    //transfertime:cala.vinas=123\n    const leftPart = data[0];\n    const channel = leftPart.split(':')[0];\n    const key = leftPart.split(':')[1];\n    const value = data[1];\n    console.log('---------');\n    console.log('channel: ' + channel);\n    console.log('key: ' + key);\n    console.log('value: ' + value);\n    console.log('---------');\n\n    pub.set(leftPart, value);\n    pub.publish(channel, key + '=' + value);\n    res.json('ok');\n  }\n\n  export async function publishMessageMQ(req: Request, res: Response): Promise<void> {\n    const transferTimes = await transferTime.find();\n\n    console.log(123);\n    amqplib.connect('amqp://localhost', function(err, conn) {\n      conn.createChannel((err, ch) => {\n        const q = 'transfertimes';\n\n        ch.assertQueue(q, {durable: false});\n        // Note: on Node 6 Buffer.from(msg) should be used\n        ch.sendToQueue(q, new Buffer(JSON.stringify(transferTimes)));\n        console.log(\" [x] Sent 'transfertimes!'\");\n      });\n    });\n\n    res.json('ok');\n  }\n}\n"]}