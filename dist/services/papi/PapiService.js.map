{"version":3,"sources":["../src/services/papi/PapiService.ts"],"names":[],"mappings":";;;;;;;;;;AACA,gFAAqF;AAErF,mCAAgC;AAChC,gEAA+E;AAC/E,kEAAkF;AAElF;;AAEgB,sBAAU,GAAG,CAAO,GAAY,EAA4B,EAAE;IAC1E,MAAM,OAAO,GAAG,IAAI,+BAAc,CAAC,GAAG,CAAC,CAAC;IAExC,IAAI;QACF,MAAM,YAAY,GAAG,MAAM,SAAG,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;QAC5E,OAAO,IAAI,iCAAe,CAAC,YAAY,CAAC,CAAC;KAC1C;IAAC,OAAO,CAAC,EAAE;QACV,MAAM,IAAI,iCAAmB,CAAC,CAAC,CAAC,CAAC;KAClC;AACH,CAAC,CAAA,CAAA;AAXH,kCAaC","file":"PapiService.js","sourcesContent":["import { Request } from 'express';\nimport { InternalServerError } from 'tc-nodejs-core-services/dist/error/ServerError';\n\nimport { App } from '../../App';\nimport { PackageRequest as PackageRequest } from './getPackage/PackageRequest';\nimport { PackageResponse as PackageResponse } from './getPackage/PackageResponse';\n\nexport class PapiService {\n\n  public static getPackage = async (req: Request): Promise<PackageResponse> => {\n    const request = new PackageRequest(req);\n\n    try {\n      const papiResponse = await App.httpClient.get(request.uri, request.options);\n      return new PackageResponse(papiResponse);\n    } catch (e) {\n      throw new InternalServerError(e);\n    }\n  }\n\n}\n"]}